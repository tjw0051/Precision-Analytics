{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Entry",
				"EntryMsg"
			],
			[
				"Entr",
				"EntryMsg"
			],
			[
				"Handl",
				"HandlerFunc"
			],
			[
				"Listen",
				"ListenAndServe"
			],
			[
				"Reac",
				"ReactTags"
			],
			[
				"margi",
				"margin-bottom"
			],
			[
				"marg",
				"margin"
			],
			[
				"style",
				"font-style"
			],
			[
				"pad",
				"padding-right"
			],
			[
				"pa",
				"padding-left"
			],
			[
				"mar",
				"margin-left"
			],
			[
				"Gall",
				"GalleryComponent"
			],
			[
				"tex",
				"text-align"
			],
			[
				"te",
				"text-align"
			],
			[
				"Loadin",
				"LoadingScreenComponent"
			],
			[
				"react",
				"react-spinner"
			],
			[
				"debu",
				"debugMode"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"t",
				"text-decoration"
			],
			[
				"fon",
				"font-style"
			],
			[
				"onClic",
				"onClickItem"
			],
			[
				"top",
				"topVideosList"
			],
			[
				"c",
				"Component"
			],
			[
				"sort",
				"sortedVideoData"
			],
			[
				"load",
				"Loading"
			],
			[
				"font",
				"font-weight"
			],
			[
				"border",
				"border-radius"
			],
			[
				"in",
				"inline-block"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"paddin",
				"padding-right"
			],
			[
				"bak",
				"background-origin"
			],
			[
				"bacl",
				"background-color"
			],
			[
				"vid",
				"videoList"
			],
			[
				"reac",
				"react-table"
			],
			[
				"chan",
				"channelName"
			],
			[
				"ratin",
				"rating"
			],
			[
				"bord",
				"border-width"
			],
			[
				"onPre",
				"onPressGo"
			],
			[
				"playli",
				"playlistValue"
			],
			[
				"playlist",
				"playlistInput"
			],
			[
				"onPlay",
				"onPlaylistSelect"
			],
			[
				"play",
				"playlistValue"
			],
			[
				"v",
				"playlistValue"
			],
			[
				"on",
				"onPlaylistChange"
			],
			[
				"playl",
				"playlistList"
			],
			[
				"pla",
				"playlistList"
			],
			[
				"get",
				"getPlaylists"
			],
			[
				"you",
				"youtubeUrl"
			],
			[
				"onCLi",
				"onClickGraph"
			],
			[
				"chann",
				"channelName"
			],
			[
				"handle",
				"handleKeyPress"
			],
			[
				"ha",
				"handleKeyPress"
			],
			[
				"class",
				"className"
			],
			[
				"typi",
				"typing"
			],
			[
				"typing",
				"typingTimeout"
			],
			[
				"border-le",
				"border-left-width"
			],
			[
				"backgrou",
				"background-color"
			],
			[
				"stroke",
				"strokeWidth"
			],
			[
				"Ar",
				"AreaChart"
			],
			[
				"Li",
				"LineChart"
			],
			[
				"stat",
				"state"
			],
			[
				"res",
				"resultsCount"
			],
			[
				"disli",
				"dislikeCount"
			],
			[
				"vide",
				"videoData"
			],
			[
				"getAll",
				"getAllRatingsRecursive"
			],
			[
				"end",
				"endIndex"
			],
			[
				"getA",
				"getAllRatingsRecursive"
			],
			[
				"rating",
				"ratingsData"
			],
			[
				"_",
				"_ratingData"
			],
			[
				"l",
				"length"
			],
			[
				"id",
				"idCount"
			],
			[
				"vi",
				"videoData"
			],
			[
				"string",
				"stringData"
			],
			[
				"getVi",
				"getVideoDataRecursive"
			],
			[
				"parse",
				"parseVideoData"
			],
			[
				"next",
				"nextPageToken"
			],
			[
				"json",
				"jsonBody"
			],
			[
				"channel",
				"channelId"
			],
			[
				"enc",
				"encryption"
			],
			[
				"encr",
				"encrypt"
			],
			[
				"public",
				"publicKey"
			],
			[
				"SearchErr",
				"SearchErrorSchema"
			],
			[
				"reuq",
				"require"
			],
			[
				"module",
				"moduleName"
			],
			[
				"modu",
				"moduleName"
			],
			[
				"inp",
				"inputAdapter"
			],
			[
				"proc",
				"procAdapter"
			],
			[
				"pro",
				"procChannel"
			],
			[
				"sub",
				"subscribeInput"
			],
			[
				"Quant",
				"QuantumAdapter"
			],
			[
				"Q",
				"QuantumAdapter"
			],
			[
				"send",
				"sendType"
			],
			[
				"rece",
				"receiveType"
			],
			[
				"margin",
				"margin"
			],
			[
				"back",
				"background-color"
			],
			[
				"trans",
				"translate3d"
			],
			[
				"ali",
				"text-align"
			],
			[
				"ba",
				"background-color"
			],
			[
				"wid",
				"width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Main.go",
			"settings":
			{
				"buffer_size": 268,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Routes.go",
			"settings":
			{
				"buffer_size": 650,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3221,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Database.go",
			"settings":
			{
				"buffer_size": 1895,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package auth\n\nimport (\n	\"fmt\"\n	\"log\"\n	\"time\"\n	\n	\"github.com/dgrijalva/jwt-go\"\n)\n\ntype AuthReq struct {\n	// Valid API Key\n	ApiKey 		string 		`json:\"apiKey\"`\n	UserId 		string 		`json:\"userId\"`\n}\n\ntype AuthResponse struct {\n	Token 		string 		`json:\"token\"`\n}\n\ntype CustomClaims struct {\n	UserId 		string 		`json:\"userId\"`\n	jwt.StandardClaims\n}\n\nvar apiKey = \"61529673-6c86-4f54-9bdd-838bf12360a6\"\nvar tokenSecret = \"secret\"\nvar tokenIssuer = \"precision\"\n\nfunc getToken(id string) (string, error) {\n	log.Printf(\"Token for: %s\", id)\n	// Create the Claims\n	claims := CustomClaims{\n	    id,\n	    jwt.StandardClaims{\n	        Issuer:    tokenIssuer,\n	        IssuedAt: time.Now().Unix(),\n	        ExpiresAt: time.Now().Unix() + 3600, // 1hr = 3600\n	        NotBefore: time.Now().Unix(),\n	    },\n	}\n	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)\n\n	// Sign and get the complete encoded token as a string using the secret\n	tokenString, err := token.SignedString([]byte(tokenSecret))\n	if(err != nil) {\n		return \"\", err\n	}\n\n	log.Printf(\"Generating token: %s\", tokenString)\n	return tokenString, nil\n}\n\n// TODO: check keys in DB - errors for expired, deactive, limit-reached, not found, etc.\nfunc ValidateApiKey(key string) bool {\n	if(key == apiKey) {\n		return true\n	} else {\n		return false\n	}\n}\n\nfunc ValidateToken(tokenString string) (bool, error) {\n	log.Printf(\"Validating token: %s\", tokenString)\n\n	token, err := jwt.ParseWithClaims(tokenString, &CustomClaims{}, func(token *jwt.Token) (interface{}, error) {\n		secret := []byte(tokenSecret)\n	    // Don't forget to validate the alg is what you expect:\n	    if _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok {\n	        return false, fmt.Errorf(\"Unexpected signing method: %v\", token.Header[\"alg\"])\n	    }\n	    return secret, nil\n	})\n\n	log.Printf(\"Finished parse...\")\n	if _, ok := token.Claims.(*CustomClaims); ok && token.Valid {\n		log.Printf(\"Token OK\")\n		return true, nil\n		//return false, fmt.Errorf(\"Invalid issuer on token claims\")\n	} else {\n		return false, err\n	}\n}\n\n",
			"file": "Auth.go",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 2029,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Replies.go",
			"settings":
			{
				"buffer_size": 475,
				"line_ending": "Unix"
			}
		},
		{
			"file": "startDB.sh",
			"settings":
			{
				"buffer_size": 111,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Validation.go",
			"settings":
			{
				"buffer_size": 991,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Router.go",
			"settings":
			{
				"buffer_size": 393,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Logger.go",
			"settings":
			{
				"buffer_size": 341,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"prett",
				"HTMLPrettify"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"revi",
				"Markdown Preview: Preview in Browser"
			],
			[
				"peview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pre",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"pretty",
				"HTMLPrettify"
			],
			[
				"package control	",
				"Package Control: Install Package"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Tom/Dev/Go/src/PrecisionAPI",
		"/Users/Tom/Dev/Go/src/PrecisionAPI/auth"
	],
	"file_history":
	[
		"/Users/Tom/Dev/Go/src/PrecisionAPI/README.md",
		"/Users/Tom/Dev/Go/src/PrecisionAPI/LICENSE.md",
		"/var/folders/zv/crm5cp415877rtlrhc86t6_c0000gn/T/rsub-jtebsg/carkit.html",
		"/var/folders/zv/crm5cp415877rtlrhc86t6_c0000gn/T/rsub-n_mt__/index.html",
		"/var/folders/zv/crm5cp415877rtlrhc86t6_c0000gn/T/rsub-yq4gww/index.html",
		"/Users/Tom/Dev/Go/src/PrecisionAPI/Database.go",
		"/Users/Tom/Dev/Go/src/PrecisionAPI/Logger.go",
		"/Users/Tom/Dev/Go/src/BasicServer/server.go",
		"/Users/Tom/Dev/Web/pimpmy.design/src/index.js",
		"/Users/Tom/Dev/Web/pimpmy.design/README.md",
		"/Users/Tom/Dev/Web/youtube-graphr/public/index.html",
		"/Users/Tom/Dev/Web/youtube-graphr/src/StartComponent.js",
		"/Users/Tom/Dev/Web/youtube-ratr/src/StartComponent.css",
		"/Users/Tom/Dev/Web/youtube-ratr/src/GraphComponent.css",
		"/Users/Tom/Dev/Web/youtube-ratr/src/GraphComponent.js",
		"/Users/Tom/Dev/Web/youtube-ratr/src/App.js",
		"/Users/Tom/Dev/Web/youtube-ratr/src/index.js",
		"/Users/Tom/Dev/Web/youtube-ratr/src/StartComponent.js",
		"/Users/Tom/Dev/Web/YoutubeRatr/allratingsdata.json",
		"/Users/Tom/Dev/Web/YoutubeRatr/api help",
		"/Users/Tom/Dev/Web/YoutubeRatr/index.js",
		"/Users/Tom/Dev/Web/YoutubeRatr/allvideodata.json",
		"/Users/Tom/Dev/Web/YoutubeRatr/frontend/index.js",
		"/Users/Tom/Downloads/react-15.0.1/examples/basic-jsx-external/index.html",
		"/Users/Tom/Downloads/react-15.0.1/examples/basic-jsx/index.html",
		"/Users/Tom/Downloads/react-15.0.1/examples/jquery-bootstrap/index.html",
		"/Users/Tom/Downloads/react-15.0.1/examples/basic/index.html",
		"/Users/Tom/Dev/Web/YoutubeRatr/videodata.json",
		"/Users/Tom/Dev/Web/YoutubeRatr/videodata",
		"/Users/Tom/Dev/Web/YoutubeRatr/auth.js",
		"/Users/Tom/Dev/Web/YoutubeRatr/GClient.js",
		"/Users/Tom/Dev/Web/YoutubeRatr/secrets.json",
		"/Users/Tom/Dev/Web/YoutubeRatr/api.js",
		"/Users/Tom/Dev/Web/API/PrecisionAnalytics/src/encryption.js",
		"/Users/Tom/Downloads/Makefile",
		"/Users/Tom/Downloads/contiki-3.0/README-BUILDING.md",
		"/Users/Tom/Desktop/contiki/examples/nano_usb_programmer/main.c",
		"/Users/Tom/Dev/Web/API/PrecisionAnalytics/Tests/EncryptionTests.js",
		"/Users/Tom/Desktop/contiki/examples/nano_usb_programmer_backup/main.c",
		"/Volumes/Parallels Desktop 12.0.2 by Macbed.com/Tools/EFI Patch/SnowLeo.tool",
		"/Users/Tom/Dev/AI/Quantum/src/QuantumAdapter.js",
		"/Users/Tom/Dev/Web/API/PrecisionAnalytics/encryption.js",
		"/Users/Tom/Dev/Web/API/PrecisionAnalytics/auth.json",
		"/Users/Tom/Dev/Web/API/MobileAnalytics/auth.json",
		"/Users/Tom/Dev/Web/API/MobileAnalytics/models/LogEvent.js",
		"/Users/Tom/Dev/Web/API/MobileAnalytics/README.md",
		"/Users/Tom/Dev/Web/API/MobileAnalytics/server.js",
		"/Users/Tom/Dev/Web/API/MobileAnalytics/models/SearchError.js",
		"/Users/Tom/Dev/Web/API/Mobile Analytics/models/SearchError.js",
		"/Users/Tom/Dev/Web/API/Mobile Analytics/server.js",
		"/Users/Tom/ClionProjects/opencv_test/CarDatabase-2/audi_a4/spec.json",
		"/Users/Tom/Dev/Experiments/VehicleDatabase/makes.json",
		"/Users/Tom/ClionProjects/opencv_test/cmake-build-debug/Training.vocab",
		"/Users/Tom/ClionProjects/opencv_test/cmake-build-debug/A4.desc",
		"/Users/Tom/ClionProjects/opencv_test/Image Sets/Phone/spec.json",
		"/Users/Tom/Downloads/MOT History - Event Counts for Search - 2017-01-08.csv",
		"/Users/Tom/Dev/AI/Quantum/modules/discordAdapter.js",
		"/Users/Tom/Dev/AI/Quantum/modules/Debugger.js",
		"/Users/Tom/Dev/AI/Quantum/consoleInput.js",
		"/Users/Tom/Dev/Web/Blog/tjw0051.github.io/_posts/2017-01-08-Working-With-Classes-in-Javascript.markdown",
		"/Users/Tom/Dev/Web/Blog/tjw0051.github.io/_posts/2016-01-08-Working-With-Classes-in-Javascript.markdown",
		"/Users/Tom/Dev/AI/Quantum/src/quantum.js",
		"/Users/Tom/Dev/AI/Discord/Ultrabot/bot.js",
		"/Users/Tom/Dev/AI/Quantum/discordAdapter.js",
		"/Users/Tom/Google Drive/University/Loughborough/Computer Vision/Raw Data",
		"/Users/Tom/Dev/Experiments/VehicleDatabase/models2/440.json",
		"/Users/Tom/Dev/Experiments/VehicleDatabase/models2/453.json",
		"/Users/Tom/Dev/Experiments/VehicleDatabase/models2/447.json",
		"/Users/Tom/Dev/Email Signature/Hypnos Studios Signature (final).html",
		"/Users/Tom/Dev/HypnosStudios (Live)/public/views/index.html",
		"/Users/Tom/Library/Mail/V3/MailData/Signatures/BFF57168-46CD-4B5A-8681-051EFBE44FE8.mailsignature",
		"/Users/Tom/Dev/HypnosStudios (Refactored)/index.html",
		"/Users/Tom/Desktop/bower.json",
		"/Users/Tom/Dev/HypnosStudios (Refactored)/js/animation.js",
		"/Users/Tom/Dev/HypnosStudios (Refactored)/css/landing-page.css",
		"/Users/Tom/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Tom/Dev/HypnosStudios (Refactored)/js/animation.css",
		"/Users/Tom/Downloads/startbootstrap-grayscale-1.0.6/css/grayscale.css",
		"/Users/Tom/Downloads/startbootstrap-grayscale-1.0.6/index.html",
		"/Users/Tom/Downloads/startbootstrap-agency-1.0.6/css/agency.css",
		"/Users/Tom/Downloads/startbootstrap-agency-1.0.6/index.html",
		"/Users/Tom/Downloads/startbootstrap-landing-page-1.0.5/css/bootstrap.css",
		"/Users/Tom/AndroidStudioProjects/MotHistory3/app/src/main/res/layout/fragment_search.xml",
		"/Users/Tom/Downloads/MGSE_Project-2/NodejsServer/server.js",
		"/Users/Tom/Dev/Experiments/HttpParseTests/Main.java"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"left",
			"align",
			"getAllRatings(",
			"viewcou",
			"id",
			"_video",
			"sampleclie",
			"export",
			"Voca",
			"^Pred.*",
			"Matches: .*",
			"Matches: *",
			"Make_ID",
			"/",
			"contact",
			"feature-it",
			"nav",
			"section-c-left",
			"feature-item",
			"list",
			"banner",
			"background",
			"feature-icons",
			"feature-icon",
			"feature",
			"section-heading",
			"row-section",
			"nav",
			"navbar",
			"invis",
			"fade",
			"clearf",
			"section-a-head",
			"detailed-feature",
			"right-ali",
			"detailed-features",
			"detailed-featur",
			"feature-hea",
			"feature-desc",
			"feature-tex",
			"color",
			"detailed-feature",
			"feature",
			"detailed",
			"detailed-fea",
			"banner",
			"network-na",
			"lead",
			".lead",
			"topnav"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Main.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 268,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								204
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Routes.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 650,
						"regions":
						{
						},
						"selection":
						[
							[
								130,
								130
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3221,
						"regions":
						{
						},
						"selection":
						[
							[
								2627,
								2627
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 888.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Database.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1895,
						"regions":
						{
						},
						"selection":
						[
							[
								811,
								811
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Auth.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2029,
						"regions":
						{
						},
						"selection":
						[
							[
								190,
								190
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Replies.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 475,
						"regions":
						{
						},
						"selection":
						[
							[
								475,
								475
							]
						],
						"settings":
						{
							"syntax": "Packages/Go/Go.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "startDB.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								79
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Validation.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								728,
								728
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Router.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 393,
						"regions":
						{
						},
						"selection":
						[
							[
								23,
								23
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Logger.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 341,
						"regions":
						{
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/Go/Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "project.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"~/Dev/Experiments/VehicleDatabase/makes.json"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 144.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
